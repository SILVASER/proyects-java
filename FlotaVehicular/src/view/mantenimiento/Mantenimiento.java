/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.mantenimiento;

import Modelo.Dao;
import Modelo.rMantenimiento;
import Modelo.rRepuestos;
import Modelo.rServicios;
import Utilidades.Utilidades;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.plaf.basic.BasicMenuBarUI;
import javax.swing.table.DefaultTableCellRenderer;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import swing.xp.shapeTabbedPaneUI;
import view.Login;
import view.entradasalidas.User;

/**
 *
 * @author Dani
 */
public class Mantenimiento extends javax.swing.JFrame {

    /**
     * Creates new form Mantenimiento2
     */
    Dao dao= new Dao();
      int indice;
      Date fechaw=null;
      Date fechaw2=null;
      Date fechaw3=null;
      Date fechaw4=null;
              
           static Login is;
     String ip;
    String nombreUser = Login.txtusuario.getText();  
    public Mantenimiento()
    {
        initComponents();
          ptable();
          ptable2();
          ptable3();
        menubar();
        tabbedpanel();
       
          this.setIconImage(new ImageIcon(getClass().getResource("/images/folder-saved-search.png")).getImage());

            try {
          ip = InetAddress.getLocalHost().getHostAddress() + " - " + InetAddress.getLocalHost().getHostName();
        } catch (UnknownHostException ex) {
            Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }

            this.setTitle("Registro de Mantenimiento.  " + nombreUser+"@ServiciosGeneralesViviana " + "[{"+ ip +"}]" );

        dao.mostrarManteniento("", "", "", "", "");
        dao.mostrarRespuesto("", "");
        dao.mostrarServicios("", "", "");
        indice = 0;
        
        
          if(Mantenimiento.tablemantenimiento.getRowCount()!= 0){
           
            tablemantenimiento.setRowSelectionInterval(0, 0);
            verFilaSeleccionadas();
            verFilaSeleccionadas2();
        }
          
       
          
          
          
       
        
        
//        verFilaSeleccionadas();
//        verFilaSeleccionadas2();


        int j=1;
        cantidadRegist(j);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablemantenimiento = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablerepuestos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableservicios = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        btndouwn = new javax.swing.JButton();
        btnup = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        cantidad = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu14 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento");

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tablemantenimiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablemantenimiento.setSelectionBackground(new java.awt.Color(255, 255, 0));
        tablemantenimiento.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tablemantenimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablemantenimientoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablemantenimiento);

        jTabbedPane1.addTab("Registro de Mantenimiento", jScrollPane2);

        tablerepuestos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablerepuestos.setSelectionBackground(new java.awt.Color(255, 255, 0));
        tablerepuestos.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(tablerepuestos);

        jTabbedPane1.addTab("Repuestos", jScrollPane3);

        tableservicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableservicios.setSelectionBackground(new java.awt.Color(255, 255, 0));
        tableservicios.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane4.setViewportView(tableservicios);

        jTabbedPane1.addTab("Servicios", jScrollPane4);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-copy.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/system-search.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Calendar_16x16.png"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        btndouwn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/go-down.png"))); // NOI18N
        btndouwn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndouwnActionPerformed(evt);
            }
        });

        btnup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/go-up.png"))); // NOI18N
        btnup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer_1.png"))); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/system-log-out.png"))); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view-refresh.png"))); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndouwn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton10)
                        .addComponent(jButton11)
                        .addComponent(btndouwn)
                        .addComponent(btnup)
                        .addComponent(jButton14)
                        .addComponent(jButton15)
                        .addComponent(jButton16)))
                .addContainerGap())
        );

        cantidad.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        cantidad.setForeground(new java.awt.Color(0, 51, 255));
        cantidad.setText("jLabel1");

        jButton9.setBackground(new java.awt.Color(184, 221, 182));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/brain_2.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("SAFV - SISTEMA DE ADMINISTRACIÓN DE FLOTA VEHICULAR - SERVICIOS GENERALES VIVIANA EIRL");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9)
                    .addComponent(cantidad))
                .addGap(6, 6, 6))
        );

        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenuBar1.setPreferredSize(new java.awt.Dimension(324, 29));

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Salir");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem2.setText("Ver");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Herramientas");
        jMenu5.add(jSeparator2);

        jMenuItem3.setText("Menu principal");
        jMenu5.add(jMenuItem3);
        jMenu5.add(jSeparator4);

        jMenuItem4.setText("Submenu");
        jMenu5.add(jMenuItem4);

        jMenuBar1.add(jMenu5);

        jMenu9.setText("Sistemas");

        jMenuItem5.setText("Procesos");
        jMenu9.add(jMenuItem5);

        jMenuBar1.add(jMenu9);

        jMenu11.setText("Reportes");

        jMenuItem6.setText("Imprimir");
        jMenu11.add(jMenuItem6);

        jMenuBar1.add(jMenu11);

        jMenu14.setText("Ayuda");

        jMenuItem7.setText("?");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItem7);

        jMenuBar1.add(jMenu14);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        if(indice==0){
            nuevoMant mant90=new nuevoMant();
            mant90.setVisible(true);
            mant90.setLocationRelativeTo(null);

        }
        
       if(indice==1){
            nuevoResp nrtt=new nuevoResp();
            nrtt.setVisible(true);
            nrtt.setLocationRelativeTo(null);

        }
       
       if(indice==2){
           nuevoSer nsxx=new nuevoSer();
            nsxx.setVisible(true);
            nsxx.setLocationRelativeTo(null); 

       }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if(indice==0){
        SearchMant sm=new SearchMant();
        sm.setVisible(true);
        sm.setLocationRelativeTo(null);
        }
        
          if(indice==1){
        SearchRep sm=new SearchRep();
        sm.setVisible(true);
        sm.setLocationRelativeTo(null);
        }
          
            if(indice==2){
        SearchServ sm=new SearchServ();
        sm.setVisible(true);
        sm.setLocationRelativeTo(null);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        if(indice==0){
            int filaM = tablemantenimiento.getSelectedRow();
            
            if(filaM<0){
                JOptionPane.showMessageDialog(rootPane, "no ha seleccionado ningun registro");
            }else{

                ActualizarMant amnt= new  ActualizarMant();
                 amnt.setVisible(true);
                 amnt.setLocationRelativeTo(null);

               ActualizarMant.txtcodigo.setText(tablemantenimiento.getValueAt(filaM, 0).toString());
               ActualizarMant.txtnombre.setText(tablemantenimiento.getValueAt(filaM, 1).toString());
                ActualizarMant.txtimporte.setText(tablemantenimiento.getValueAt(filaM, 2).toString());
                
                 String cxy=tablemantenimiento.getModel().getValueAt(filaM, 3).toString();
                        if(cxy.equals("")){
                             Date fvaciaxy=null;
                             ActualizarMant.datefechamant.setDate(fvaciaxy); 
                             ActualizarMant.txt1.setText("");
                        }else{
                           try {
                            fechaw = new SimpleDateFormat("yyyy-MM-dd").parse((String)tablemantenimiento.getValueAt(filaM, 3).toString());
                            } catch (ParseException ex) {
                                Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            ActualizarMant.datefechamant.setDate(fechaw);
                        }
                
                 String ids = (String) tablemantenimiento.getValueAt(filaM, 5);
                 ActualizarMant.txtidp.setText(ids);
                 
                 String nomp = (String) tablemantenimiento.getValueAt(filaM,6);
                 ActualizarMant.txtnomp.setText(nomp);
////                Object obj = tablemantenimiento.getValueAt(filaM, 4);
////                if (obj != null) {
////                ActualizarMant.txtnomp.setText(tablemantenimiento.getValueAt(filaM, 4).toString());
////                }else{
////                 ActualizarMant.txtnomp.setText("");
////                }
                String des = (String) tablemantenimiento.getValueAt(filaM,4);
                ActualizarMant.cbtm.getModel().setSelectedItem(des);
                
                 
          
                String c=tablemantenimiento.getModel().getValueAt(filaM, 7).toString();
                        if(c.equals("")){
                             Date fvacia=null;
                             ActualizarMant.dateultimarevision.setDate(fvacia); 
                             ActualizarMant.txt2.setText("");
                        }else{
                           try {
                                   fechaw2 = new SimpleDateFormat("yyyy-MM-dd").parse((String)tablemantenimiento.getValueAt(filaM, 7).toString());
                               } catch (ParseException ex) {
                                   Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                               }
                                ActualizarMant.dateultimarevision.setDate(fechaw2);
                        }

                ActualizarMant.txtdiasv.setText(tablemantenimiento.getValueAt(filaM, 8).toString());
                                                
                   String cx=tablemantenimiento.getModel().getValueAt(filaM, 9).toString();
                        if(cx.equals("")){
                             Date fvaciax=null;
                             ActualizarMant.datesiguienterevision.setDate(fvaciax); 
                             ActualizarMant.txt3.setText("");

                        }else{
                            try {
                                 fechaw3 = new SimpleDateFormat("yyyy-MM-dd").parse((String)tablemantenimiento.getValueAt(filaM, 9).toString());
                             } catch (ParseException ex) {
                                 Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                             }
                         ActualizarMant.datesiguienterevision.setDate(fechaw3);
                        }
                
                ActualizarMant.txturk.setText(tablemantenimiento.getValueAt(filaM, 10).toString());
                ActualizarMant.txtvk.setText(tablemantenimiento.getValueAt(filaM, 11).toString());
                ActualizarMant.txtsrk.setText(tablemantenimiento.getValueAt(filaM, 12).toString());
                
                            
////                Object obj2 = tablemantenimiento.getValueAt(filaM, 12);
////                if (obj2 != null) {
////                ActualizarMant.txtnomv.setText(tablemantenimiento.getValueAt(filaM, 12).toString()); 
////                }else{
////                 ActualizarMant.txtnomv.setText("");
////                }
////
////                Object obj3 = tablemantenimiento.getValueAt(filaM, 13);
////              
////                if (obj3 != null) {
////                ActualizarMant.txtnome.setText(tablemantenimiento.getValueAt(filaM, 13).toString()); 
////                }else{
////                 ActualizarMant.txtnome.setText("");
////                }

                String idm = (String) tablemantenimiento.getValueAt(filaM, 13);
                ActualizarMant.txtidv.setText(idm);
                
                String maq = (String) tablemantenimiento.getValueAt(filaM, 14);
               ActualizarMant.txtnomv.setText(maq);
                
                String ide = (String) tablemantenimiento.getValueAt(filaM, 15);
                ActualizarMant.txtide.setText(ide);
                
                String emp = (String) tablemantenimiento.getValueAt(filaM, 16);
                ActualizarMant.txtnome.setText(emp);

                ActualizarMant.datefa.setText(tablemantenimiento.getValueAt(filaM, 17).toString());
                ActualizarMant.txtuser.setText(tablemantenimiento.getValueAt(filaM, 18).toString());
                ActualizarMant.txtip.setText(tablemantenimiento.getValueAt(filaM, 19).toString());

            }
        }

       
        
        
        
        if(indice==1){
            //            System.out.println("detalle");
            int filaR = tablerepuestos.getSelectedRow();
//            String tarprop = "";
//
            if(filaR<0){
                JOptionPane.showMessageDialog(rootPane, "no ha seleccionado ningun registro");

            }else{

                ActualizarResp ar= new  ActualizarResp();
                 ar.setVisible(true);
                 ar.setLocationRelativeTo(null);

                 
               ActualizarResp.txtidr.setText(tablerepuestos.getValueAt(filaR, 0).toString());
               ActualizarResp.txtcodigo.setText(tablerepuestos.getValueAt(filaR, 1).toString());
                ActualizarResp.txtdescripcion.setText(tablerepuestos.getValueAt(filaR, 2).toString());
                ActualizarResp.txtmarca.setText(tablerepuestos.getValueAt(filaR, 3).toString());
                ActualizarResp.txtiva.setText(tablerepuestos.getValueAt(filaR, 4).toString());
                ActualizarResp.txtcant.setText(tablerepuestos.getValueAt(filaR, 5).toString());
                ActualizarResp.txtprec.setText(tablerepuestos.getValueAt(filaR, 6).toString());
                ActualizarResp.txtsubtotal.setText(tablerepuestos.getValueAt(filaR, 7).toString());
                ActualizarResp.txtimporteiva.setText(tablerepuestos.getValueAt(filaR, 8).toString());
                ActualizarResp.txttotal.setText(tablerepuestos.getValueAt(filaR, 9).toString());
                ActualizarResp.datefa.setText(tablerepuestos.getValueAt(filaR, 10).toString()); 
                ActualizarResp.txtuser.setText(tablerepuestos.getValueAt(filaR,11).toString());
                ActualizarResp.txtip.setText(tablerepuestos.getValueAt(filaR, 12).toString());
                        

            }
        } 
            if(indice==2){
//                        System.out.println("detalle");
            int filaS = tableservicios.getSelectedRow();
//            String tarprop = "";
//
            if(filaS<0){
                JOptionPane.showMessageDialog(rootPane, "no ha seleccionado ningun registro");

            }else{

                 ActualizarSer as= new   ActualizarSer();
                 as.setVisible(true);
                 as.setLocationRelativeTo(null);

                 
                ActualizarSer.txtidser.setText(tableservicios.getValueAt(filaS, 0).toString());
                ActualizarSer.txtcodigo.setText(tableservicios.getValueAt(filaS, 1).toString());
                
                 String cxq=tableservicios.getModel().getValueAt(filaS, 2).toString();
                        if(cxq.equals("")){
                             Date fvaciax=null;
                             ActualizarSer.datef.setDate(fvaciax); 
                             ActualizarSer.txt1.setText("");

                        }else{
                             try {
                                    fechaw4 = new SimpleDateFormat("yyyy-MM-dd").parse((String)tableservicios.getValueAt(filaS, 2).toString());
                                } catch (ParseException ex) {
                                    Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                                }

                           ActualizarSer.datef.setDate(fechaw4);

                        }
                
                
                
                ActualizarSer.txtservicio.setText(tableservicios.getValueAt(filaS, 3).toString());
                ActualizarSer.txtdescripcion.setText(tableservicios.getValueAt(filaS, 4).toString());
                ActualizarSer.txtprecio.setText(tableservicios.getValueAt(filaS, 5).toString());
                ActualizarSer.txtobserv.setText(tableservicios.getValueAt(filaS, 6).toString());
                ActualizarSer.datefa.setText(tableservicios.getValueAt(filaS, 7).toString());
                ActualizarSer.txtuser.setText(tableservicios.getValueAt(filaS, 8).toString());
                ActualizarSer.txtip.setText(tableservicios.getValueAt(filaS, 9).toString());
        }

        }
        
        
        
        
       

    }//GEN-LAST:event_jButton11ActionPerformed

    private void btndouwnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndouwnActionPerformed
       if(indice==0){
          down();
           
       }
       
       if(indice==1){
            down1();
       }
       
       if(indice==2){
            down2();
       }
    }//GEN-LAST:event_btndouwnActionPerformed

    private void btnupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupActionPerformed
         if(indice==0){
          up();
           
       }
       
       if(indice==1){
            up1();
       }
       
       if(indice==2){
            up2();
       }
    }//GEN-LAST:event_btnupActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if(indice==0){
            dao.mostrarManteniento("", "", "", "", "");
                          tablemantenimiento.setRowSelectionInterval(0, 0);

        }
        
        if(indice==1){
             int verfilay = tablemantenimiento.getSelectedRow(); 
        String idy = (String) tablemantenimiento.getValueAt(verfilay, 0);
   
            dao.mostrarRespuesto(idy, "");
                       tablerepuestos.setRowSelectionInterval(0, 0);

        }
        
        if(indice==2){   
             int verfilay = tablemantenimiento.getSelectedRow(); 
        String idy = (String) tablemantenimiento.getValueAt(verfilay, 0);
   
            dao.mostrarServicios(idy, "", "");
                          tableservicios.setRowSelectionInterval(0, 0);

        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void tablemantenimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablemantenimientoMouseClicked
        verFilaSeleccionadas();
        verFilaSeleccionadas2();

    }//GEN-LAST:event_tablemantenimientoMouseClicked

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
          jTabbedPane1.getSelectedIndex();
        indice = jTabbedPane1.getSelectedIndex();
        int j=1;
        if(indice==0){
            cantidadRegist(j);
       }
       
       if(indice==1){
           
            if(Mantenimiento.tablerepuestos.getRowCount()!= 0){
                 tablerepuestos.setRowSelectionInterval(0, 0);   
            cantidadRegist(j);
            }

       }
       
       if(indice==2){
           
            if(Mantenimiento.tablerepuestos.getRowCount()!= 0){
                tableservicios.setRowSelectionInterval(0, 0);
            cantidadRegist(j);
            }
             
          
       }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
       if(indice==0){
           reporteMant reportemant = new reporteMant();
       reportemant.setVisible(true);
      reportemant.setLocationRelativeTo(null);
       }
       
       if(indice==1){
           ImprimirRepuesto();
       }
       
       if(indice==2){
           ImprimirServicios();
       }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
User userxy=new User();
        userxy.setVisible(true);
        userxy.setLocationRelativeTo(null);         // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mantenimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndouwn;
    private javax.swing.JButton btnup;
    public static javax.swing.JLabel cantidad;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable tablemantenimiento;
    public static javax.swing.JTable tablerepuestos;
    public static javax.swing.JTable tableservicios;
    // End of variables declaration//GEN-END:variables
public void verFilaSeleccionadas(){
        int verfilay = tablemantenimiento.getSelectedRow();
        String idy = (String) tablemantenimiento.getValueAt(verfilay, 0);
        dao.mostrarRespuesto(idy, "");
    }
    
public void verFilaSeleccionadas2(){
        int verfilas = tablemantenimiento.getSelectedRow();
        String ids = (String) tablemantenimiento.getValueAt(verfilas, 0);
        dao.mostrarServicios(ids, "", "");
    }
     
public void menubar(){
	
  jMenuBar1.setUI ( new BasicMenuBarUI ()
    {
        public void paint ( Graphics g, JComponent c )
        {
            g.setColor (new Color(184,221,182));
            
            g.fillRect ( 0, 0, c.getWidth (), c.getHeight () );
        }
    } );
}

public void tabbedpanel(){
	
JLabel lab = new JLabel("Registro de Actividades"); 
lab.setPreferredSize(new Dimension(150, 35)); 
jTabbedPane1.setTabComponentAt(0, lab);

jTabbedPane1.setUI( new shapeTabbedPaneUI() );

}

public void ptable(){
	
tablemantenimiento.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer(){

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            l.setBorder(new LineBorder(new Color(239,242,210), 1));

//            l.setBackground(Color.green);
//                 l.setBackground(Color.getHSBColor(800, 40, 31)); 
                 l.setBackground(new Color(184,221,182)); 
               
l.setHorizontalAlignment(SwingConstants.CENTER) ;

            return l;
        }
    });
	
}

public void ptable3(){
	
tableservicios.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer(){

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            l.setBorder(new LineBorder(new Color(239,242,210), 1));

//            l.setBackground(Color.green);
//                 l.setBackground(Color.getHSBColor(800, 40, 31)); 
                 l.setBackground(new Color(184,221,182)); 
               
l.setHorizontalAlignment(SwingConstants.CENTER) ;

            return l;
        }
    });
	
}

public void ptable2(){
	
tablerepuestos.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer(){

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            l.setBorder(new LineBorder(new Color(239,242,210), 1));

//            l.setBackground(Color.green);
//                 l.setBackground(Color.getHSBColor(800, 40, 31)); 
                 l.setBackground(new Color(184,221,182)); 
               
l.setHorizontalAlignment(SwingConstants.CENTER) ;

            return l;
        }
    });
	
}

public void ImprimirMantenimiento(){
      Date fecha =new Date();
        List lista = new ArrayList();
        lista.clear();
                           int verfilam = tablemantenimiento.getSelectedRow();

        for (int i = 0; i < tablemantenimiento.getRowCount(); i++) {

            rMantenimiento mcxx = new rMantenimiento(
                    tablemantenimiento.getValueAt(i, 0).toString(),
                    tablemantenimiento.getValueAt(i, 5).toString(),
                    tablemantenimiento.getValueAt(i, 12).toString(),
                    tablemantenimiento.getValueAt(i, 2).toString(),
                    tablemantenimiento.getValueAt(i, 6).toString(),
                    tablemantenimiento.getValueAt(i, 8).toString(),
                   tablemantenimiento.getValueAt(i, 9).toString(),
                    tablemantenimiento.getValueAt(i, 10).toString(),
                    tablemantenimiento.getValueAt(i, 3).toString(),
                    tablemantenimiento.getValueAt(i, 13).toString());
            lista.add(mcxx);

        }
        try {
            String master = System.getProperty("user.dir") + "/src/Reportes/rMantenimiento.jasper";
//            String master = System.getProperty("user.dir") + "/src/Reportes/rptEstado.jasper";
//
            Map parametro = new HashMap();

            
            
//            parametro.put("logo", this.getClass().getResourceAsStream(logotipo));
            parametro.put("fechaAct",Utilidades.formatDate(fecha));

            JasperPrint informe = JasperFillManager.fillReport(master, parametro, new JRBeanCollectionDataSource(lista));

            JasperViewer.viewReport(informe, false);
//            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(rMantenimiento.class.getName()).log(Level.SEVERE, null, ex);
        }

}

public void ImprimirRepuesto(){
      Date fecha =new Date();
        List lista = new ArrayList();
        lista.clear();
                           int verfilam = tablemantenimiento.getSelectedRow();

        for (int i = 0; i < tablerepuestos.getRowCount(); i++) {

            rRepuestos mcxx = new rRepuestos(
                    tablerepuestos.getValueAt(i, 0).toString(),
                    tablerepuestos.getValueAt(i, 2).toString(),
                    tablerepuestos.getValueAt(i, 3).toString(),
                    tablerepuestos.getValueAt(i, 4).toString(),
                    tablerepuestos.getValueAt(i, 5).toString(),
                    tablerepuestos.getValueAt(i, 6).toString(),
                    tablerepuestos.getValueAt(i, 7).toString(),
                    tablerepuestos.getValueAt(i, 8).toString());
            lista.add(mcxx);

        }
        try {
            String master = System.getProperty("user.dir") + "/src/Reportes/rRepuestos.jasper";
//            String master = System.getProperty("user.dir") + "/src/Reportes/rptEstado.jasper";
//
            Map parametro = new HashMap();

             String codigo = (String) tablemantenimiento.getValueAt(verfilam, 0);
            parametro.put("codigo", codigo);
            
            String nombre = (String) tablemantenimiento.getValueAt(verfilam, 5);
            parametro.put("nombre", nombre);
            
//            parametro.put("logo", this.getClass().getResourceAsStream(logotipo));
            parametro.put("fechaAct",Utilidades.formatDate(fecha));

            JasperPrint informe = JasperFillManager.fillReport(master, parametro, new JRBeanCollectionDataSource(lista));

            JasperViewer.viewReport(informe, false);
//            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(rRepuestos.class.getName()).log(Level.SEVERE, null, ex);
        }

}

public void ImprimirServicios(){
      Date fecha =new Date();
        List lista = new ArrayList();
        lista.clear();
                           int verfilam = tablemantenimiento.getSelectedRow();

        for (int i = 0; i < tableservicios.getRowCount(); i++) {

            rServicios mcxx = new rServicios(
                    tableservicios.getValueAt(i, 0).toString(),
                    tableservicios.getValueAt(i, 2).toString(),
                    tableservicios.getValueAt(i, 4).toString(),
                    tableservicios.getValueAt(i, 3).toString(),
                    tableservicios.getValueAt(i, 6).toString(),
                    tableservicios.getValueAt(i, 5).toString());
            lista.add(mcxx);

        }
        try {
            String master = System.getProperty("user.dir") + "/src/Reportes/rServicios.jasper";
//            String master = System.getProperty("user.dir") + "/src/Reportes/rptEstado.jasper";
//
            Map parametro = new HashMap();

             String codigo = (String) tablemantenimiento.getValueAt(verfilam, 0);
            parametro.put("codigo", codigo);
            
            String nombre = (String) tablemantenimiento.getValueAt(verfilam, 5);
            parametro.put("nombre", nombre);
            
//            parametro.put("logo", this.getClass().getResourceAsStream(logotipo));
            parametro.put("fechaAct",Utilidades.formatDate(fecha));

            JasperPrint informe = JasperFillManager.fillReport(master, parametro, new JRBeanCollectionDataSource(lista));

            JasperViewer.viewReport(informe, false);
//            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(rServicios.class.getName()).log(Level.SEVERE, null, ex);
        }

}

public void up(){
    int index=0;
    index = tablemantenimiento.getSelectedRow();

                if(index > 0){
                    tablemantenimiento.setRowSelectionInterval(index - 1, index - 1);
                    btndouwn.setEnabled(true);
                    cantidadRegist(index);

                }else{
                    btnup.setEnabled(false);
                    btndouwn.setEnabled(true);
                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void up1(){
    int index=0;
    index = tablerepuestos.getSelectedRow();

                if(index > 0){
                    tablerepuestos.setRowSelectionInterval(index - 1, index - 1);
                    btndouwn.setEnabled(true);
                    cantidadRegist(index);

                }else{
                    btnup.setEnabled(false);
                    btndouwn.setEnabled(true);
                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void up2(){
    int index=0;
    index = tableservicios.getSelectedRow();

                if(index > 0){
                    tableservicios.setRowSelectionInterval(index - 1, index - 1);
                    btndouwn.setEnabled(true);
                    cantidadRegist(index);

                }else{
                    btnup.setEnabled(false);
                    btndouwn.setEnabled(true);
                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void down(){
        int index;
        
        index = tablemantenimiento.getSelectedRow();
    

                if(tablemantenimiento.getRowCount()>(index+1)){
                         tablemantenimiento.setRowSelectionInterval(index + 1, index + 1);
                         cantidadRegist(index + 2);
                     btnup.setEnabled(true);
                    }else{
                   btndouwn.setEnabled(false);
                   btnup.setEnabled(true);

                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void down1(){
        int index;
        
        index = tablerepuestos.getSelectedRow();
    

                if(tablerepuestos.getRowCount()>(index+1)){
                         tablerepuestos.setRowSelectionInterval(index + 1, index + 1);
                         cantidadRegist(index + 2);
                     btnup.setEnabled(true);
                    }else{
                   btndouwn.setEnabled(false);
                   btnup.setEnabled(true);

                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void down2(){
        int index;
        index = tableservicios.getSelectedRow();
    
                if(tableservicios.getRowCount()>(index+1)){
                         tableservicios.setRowSelectionInterval(index + 1, index + 1);
                         cantidadRegist(index + 2);
                     btnup.setEnabled(true);
                    }else{
                   btndouwn.setEnabled(false);
                   btnup.setEnabled(true);
                }
                verFilaSeleccionadas();
                verFilaSeleccionadas2();
        }

public void cantidadRegist(int j){
    if(indice==0){
         int fila = tablemantenimiento.getSelectedRow();
            int x = 0;
            for (int i = 0; i < tablemantenimiento.getRowCount(); i++){
                     x++;
                }
            cantidad.setText("["+ j+"/"+String.valueOf(x)+"]");
    }
    
    if(indice==1){
        int fila = tablerepuestos.getSelectedRow();
            int x = 0;
            for (int i = 0; i < tablerepuestos.getRowCount(); i++){
                     x++;
                }
              cantidad.setText("["+ j+"/"+String.valueOf(x)+"]");
    }
    
    if(indice==2){
        int fila = tableservicios.getSelectedRow();
            int x = 0;
            for (int i = 0; i < tableservicios.getRowCount(); i++){
                     x++;
                }
            cantidad.setText("["+ j+"/"+String.valueOf(x)+"]");
    }
      	   
  }




}
